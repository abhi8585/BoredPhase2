{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Desktop/Code/BoredPhase2/src/App.js\";\nimport React from \"react\";\nimport Home from \"./pages/Home\";\nimport Header from \"./pages/header\";\nimport ShowError from \"./components/Info/error\"; // import Particles from \"react-tsparticles\";\n// import logo from './logo.svg';\n// import './App.css';\n// import Home from './pages/home'\n// import Item from './pages/item'\n// import Header  from './pages/header';\n// import ModelInformation from './pages/model-information';\n// import Collection from './pages/collection';\n\nimport Web3 from \"web3\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css'; // import { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\"\n// import React from 'react'\n// import { Web3Ethereum } from \"@rarible/web3-ethereum\";\n// import { Switch, Route } from 'react-router-dom'\n// import ModelCollection from './pages/model';\n// import CollectionSale from './pages/collection-sale';\n// import ItemCollection from './pages/item-collection';\n// import ItemCollectionCreated from './pages/item-collection-created';\n// import FileUpload from './pages/file-upload';\n// import ShowError from './pages/error';\n\nimport Particles from \"react-tsparticles\"; // import logo from './logo.svg';\n// import './App.css';\n\nimport particlesOptions from \"./particles.json\";\nimport ipfs from \"./components/Info/ipfs\";\nimport Particle from \"./pages/particle\";\nimport \"./App.scss\"; // const App = () => {\n//   return (\n//    <div>\n//       <Header></Header>\n//     <div className=\"App\">\n//       <Home />\n//     </div>\n//    </div>\n//   );\n// };\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setAccounts = this.setAccounts.bind(this);\n    this.particlesInit = this.particlesInit.bind(this);\n    this.particlesLoaded = this.particlesLoaded.bind(this);\n    this.setNetworkId = this.setNetworkId.bind(this);\n    this.getDataFromHash = this.getDataFromHash.bind(this);\n    this.getHash = this.getHash.bind(this);\n    this.state = {\n      provider: null,\n      accounts: [],\n      sdk: null,\n      web3: null,\n      networkId: null,\n      wineData: [],\n      itemData: null\n    };\n  }\n\n  particlesInit(main) {\n    console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  }\n\n  particlesLoaded(container) {\n    console.log(container);\n  }\n\n  getHash() {}\n\n  getDataFromHash() {\n    fetch('https://ipfs.io/ipfs/QmTBdefEdEK8sM2dqCdogdrGRiL9kzfdpk1dhewQRha31k').then(response => response.json()).then(data => this.setState({\n      wineData: data\n    }));\n  }\n\n  getItemData() {\n    var itemData = this.state.wineData[Math.floor(Math.random() * this.state.wineData.length)];\n    return itemData;\n  }\n\n  async componentDidMount() {\n    // this.setState({ message: \"This is an updated message\" });\n    console.log(\"Component is Mounting\");\n    this.useEffect();\n    fetch('https://ipfs.io/ipfs/QmTBdefEdEK8sM2dqCdogdrGRiL9kzfdpk1dhewQRha31k').then(response => response.json()).then(data => this.setState({\n      wineData: data\n    })); // this.getItemData()\n  }\n\n  async setWeb3Obj(web3) {\n    await this.setState({\n      web3\n    });\n  } // async setWineData(data){\n  //   this.setState({ wineData : data});\n  // }\n\n\n  useEffect() {\n    if (window.ethereum) {\n      this.handleInit();\n      console.log(\"going in if\");\n    } else {\n      window.addEventListener('ethereum#initialized', this.handleInit, {\n        once: true\n      });\n      setTimeout(this.handleInit, 3000); // 3 seconds\n    }\n  }\n\n  async setProvider(currentProvider) {\n    await this.setState({\n      provider: currentProvider\n    });\n    console.log(this.state.provider);\n  }\n\n  async setAccounts(accounts) {\n    await this.setState({\n      accounts: accounts\n    });\n    console.log(this.state.accounts);\n  }\n\n  async setSdk(currentSdk) {\n    await this.setState({\n      sdk: currentSdk\n    });\n    console.log(this.state.sdk);\n  }\n\n  async setNetworkId(currentId) {\n    await this.setState({\n      networkId: currentId\n    });\n  }\n\n  async handleInit() {\n    const {\n      ethereum\n    } = window;\n    console.log(ethereum + \"eth obj\");\n\n    if (ethereum && ethereum.isMetaMask) {\n      console.log('Ethereum successfully detected!');\n      this.setProvider(ethereum); // add listener on accountsChanged event to render actual address\n      // ethereum.on('accountsChanged', this.state.accounts)\n\n      ethereum.on('accountsChanged', this.setAccounts); // ethereum.on('')\n      // \t// // configure web3\n\n      const web3 = new Web3(ethereum);\n      const networkId = await web3.eth.net.getId();\n      this.setNetworkId(networkId); // console.log(\"given provider\"+networkId)\n\n      await this.setWeb3Obj(web3); // // set current account if already connected\n\n      web3.eth.getAccounts().then(e => {\n        this.setAccounts(e);\n        console.log(e);\n      });\n    } else {\n      alert('Please install MetaMask!');\n    }\n  }\n\n  render() {\n    var _this$state$provider;\n\n    console.log(this.state.networkId); // if (this.state.networkId != 137 && this.state.networkId != 80001){\n    //   return(<ShowError message={\"Please Switch to Polygon Network & Reload!\"}/>)\n    //   return\n    // }\n    // if (networkId != 137 && networkId != 80001){\n    //   alert(\"Please switch to Polygon Network!\")\n    //   return\n    // }\n\n    if (!((_this$state$provider = this.state.provider) === null || _this$state$provider === void 0 ? void 0 : _this$state$provider.isMetaMask)) {\n      return /*#__PURE__*/_jsxDEV(ShowError, {\n        message: \"Please Install MetaMask!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            provider: this.state.provider,\n            accounts: this.state.accounts,\n            web3: this.state.web3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            provider: this.state.provider,\n            accounts: this.state.accounts,\n            web3: this.state.web3,\n            data: this.state.wineData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/abhishek/Desktop/Code/BoredPhase2/src/App.js"],"names":["React","Home","Header","ShowError","Web3","AwesomeSlider","Particles","particlesOptions","ipfs","Particle","App","Component","constructor","props","setAccounts","bind","particlesInit","particlesLoaded","setNetworkId","getDataFromHash","getHash","state","provider","accounts","sdk","web3","networkId","wineData","itemData","main","console","log","container","fetch","then","response","json","data","setState","getItemData","Math","floor","random","length","componentDidMount","useEffect","setWeb3Obj","window","ethereum","handleInit","addEventListener","once","setTimeout","setProvider","currentProvider","setSdk","currentSdk","currentId","isMetaMask","on","eth","net","getId","getAccounts","e","alert","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Home from \"./pages/Home\";\nimport Header from \"./pages/header\";\nimport ShowError from \"./components/Info/error\";\n// import Particles from \"react-tsparticles\";\n// import logo from './logo.svg';\n// import './App.css';\n// import Home from './pages/home'\n// import Item from './pages/item'\n// import Header  from './pages/header';\n// import ModelInformation from './pages/model-information';\n// import Collection from './pages/collection';\nimport Web3 from \"web3\";\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\n// import { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\"\n// import React from 'react'\n// import { Web3Ethereum } from \"@rarible/web3-ethereum\";\n// import { Switch, Route } from 'react-router-dom'\n// import ModelCollection from './pages/model';\n// import CollectionSale from './pages/collection-sale';\n// import ItemCollection from './pages/item-collection';\n// import ItemCollectionCreated from './pages/item-collection-created';\n// import FileUpload from './pages/file-upload';\n// import ShowError from './pages/error';\nimport Particles from \"react-tsparticles\";\n// import logo from './logo.svg';\n// import './App.css';\nimport particlesOptions from \"./particles.json\";\nimport ipfs from \"./components/Info/ipfs\";\nimport Particle from \"./pages/particle\";\n\n\nimport \"./App.scss\";\n// const App = () => {\n//   return (\n//    <div>\n//       <Header></Header>\n//     <div className=\"App\">\n      \n//       <Home />\n//     </div>\n//    </div>\n//   );\n// };\n\n// export default App;\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.setAccounts = this.setAccounts.bind(this)\n    this.particlesInit = this.particlesInit.bind(this)\n    this.particlesLoaded = this.particlesLoaded.bind(this)\n    this.setNetworkId = this.setNetworkId.bind(this)\n    this.getDataFromHash = this.getDataFromHash.bind(this)\n    this.getHash = this.getHash.bind(this)\n \n    this.state = {\n\n      provider : null,\n      accounts : [],\n      sdk:null,\n      web3:null,\n      networkId:null,\n      wineData: [],\n      itemData : null\n\n    }\n    \n  }\n\n  particlesInit(main){\n    console.log(main);\n\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n\n  particlesLoaded(container){\n    console.log(container);\n  };\n\n  \n    getHash(){\n\n    }\n\n    getDataFromHash(){\n      fetch('https://ipfs.io/ipfs/QmTBdefEdEK8sM2dqCdogdrGRiL9kzfdpk1dhewQRha31k')\n        .then(response => response.json())\n        .then(data => this.setState({ wineData : data}))\n       \n\n    }\n\n    getItemData(){\n      var itemData = this.state.wineData[Math.floor(Math.random() * this.state.wineData.length)]\n      return itemData\n    }\n\n    async componentDidMount() {\n\n      // this.setState({ message: \"This is an updated message\" });\n      console.log(\"Component is Mounting\")\n      this.useEffect()\n      fetch('https://ipfs.io/ipfs/QmTBdefEdEK8sM2dqCdogdrGRiL9kzfdpk1dhewQRha31k')\n      .then(response => response.json())\n      .then(data => this.setState({ wineData : data}))\n      // this.getItemData()\n  \n  }\n\n  async setWeb3Obj(web3){\n    await this.setState({ web3});\n  }\n\n  // async setWineData(data){\n  //   this.setState({ wineData : data});\n  // }\n\n    useEffect(){\n\n      if (window.ethereum) {\n        this.handleInit()\n        console.log(\"going in if\")\n      } else {\n        \n        window.addEventListener('ethereum#initialized', this.handleInit, {\n          once: true,\n        })\n        setTimeout(this.handleInit, 3000) // 3 seconds\n      }\n  \n    }\n\n    async setProvider(currentProvider){\n      await this.setState({ provider: currentProvider });\n      console.log(this.state.provider);\n    }\n  \n  \n    async setAccounts(accounts){\n      await this.setState({ accounts: accounts });\n      console.log(this.state.accounts);\n    }\n\n      async setSdk(currentSdk){\n      await this.setState({ sdk : currentSdk })\n      console.log(this.state.sdk);\n  }\n\n    async setNetworkId(currentId){\n      await this.setState({ networkId : currentId })\n    }\n\n    async handleInit(){\n    const { ethereum } = window\n    console.log(ethereum+\"eth obj\")\n\t\tif (ethereum && ethereum.isMetaMask) {\n\t\t\tconsole.log('Ethereum successfully detected!')\n\t\t\tthis.setProvider(ethereum)\n\n\t\t\t// add listener on accountsChanged event to render actual address\n\t\t\t// ethereum.on('accountsChanged', this.state.accounts)\n      ethereum.on('accountsChanged', this.setAccounts);\n      // ethereum.on('')\n    \n\t\t// \t// // configure web3\n\t\t\tconst web3 = new Web3(ethereum)\n      const networkId = await web3.eth.net.getId();\n      this.setNetworkId(networkId)\n      // console.log(\"given provider\"+networkId)\n      await this.setWeb3Obj(web3)\n\n\t\t\t// // set current account if already connected\n\t\t\tweb3.eth.getAccounts().then(e => {\n\t\t\t\tthis.setAccounts(e)\n        console.log(e)\n\t\t\t})\n\t\t} else {\n\t\t\talert('Please install MetaMask!')\n\t\t}\n  }\n    render() {\n      console.log(this.state.networkId)\n      // if (this.state.networkId != 137 && this.state.networkId != 80001){\n      //   return(<ShowError message={\"Please Switch to Polygon Network & Reload!\"}/>)\n      //   return\n      // }\n      // if (networkId != 137 && networkId != 80001){\n      //   alert(\"Please switch to Polygon Network!\")\n      //   return\n      // }\n        if(!this.state.provider?.isMetaMask){\n          return(<ShowError message={\"Please Install MetaMask!\"}/>)\n        }\n       else{\n        return (\n          <div>\n            {/* <Particles options={particlesOptions}/> */}\n          <Particle />\n          {/* <AwesomeSlider> */}\n        <div className=\"App\">\n        <Header provider={this.state.provider} accounts={this.state.accounts} web3={this.state.web3} />\n          <Home provider={this.state.provider} accounts={this.state.accounts} web3={this.state.web3}\n          data={this.state.wineData} \n          />\n          \n        </div>\n        {/* </AwesomeSlider> */}\n       {/* <Particles id=\"tsparticles\" url=\"http://foo.bar/particles.json\" init={this.particlesInit} loaded={this.particlesLoaded} /> */}\n       </div>\n        )\n       }\n    }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}