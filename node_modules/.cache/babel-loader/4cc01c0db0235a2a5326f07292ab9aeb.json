{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\work\\\\Desktop\\\\Code\\\\BoredPhase2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Home from \"./pages/Home\";\nimport Header from \"./pages/header\";\nimport ShowError from \"./components/Info/error\"; // import logo from './logo.svg';\n// import './App.css';\n// import Home from './pages/home'\n// import Item from './pages/item'\n// import Header  from './pages/header';\n// import ModelInformation from './pages/model-information';\n// import Collection from './pages/collection';\n\nimport Web3 from \"web3\"; // import { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\"\n// import React from 'react'\n// import { Web3Ethereum } from \"@rarible/web3-ethereum\";\n// import { Switch, Route } from 'react-router-dom'\n// import ModelCollection from './pages/model';\n// import CollectionSale from './pages/collection-sale';\n// import ItemCollection from './pages/item-collection';\n// import ItemCollectionCreated from './pages/item-collection-created';\n// import FileUpload from './pages/file-upload';\n// import ShowError from './pages/error';\n\nimport \"./App.scss\"; // const App = () => {\n//   return (\n//    <div>\n//       <Header></Header>\n//     <div className=\"App\">\n//       <Home />\n//     </div>\n//    </div>\n//   );\n// };\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setAccounts = this.setAccounts.bind(this);\n    this.state = {\n      provider: null,\n      accounts: [],\n      sdk: null,\n      web3: null\n    };\n  }\n\n  componentWillMount() {\n    // this.setState({ message: \"This is an updated message\" });\n    console.log(\"Component is Mounting\");\n    this.useEffect();\n  }\n\n  async setWeb3Obj(web3) {\n    await this.setState({\n      web3\n    });\n  }\n\n  useEffect() {\n    if (window.ethereum) {\n      this.handleInit(); // console.log(\"going in if\")\n    } else {\n      window.addEventListener('ethereum#initialized', this.handleInit, {\n        once: true\n      });\n      setTimeout(this.handleInit, 3000); // 3 seconds\n    }\n  }\n\n  async setProvider(currentProvider) {\n    await this.setState({\n      provider: currentProvider\n    });\n    console.log(this.state.provider);\n  }\n\n  async setAccounts(accounts) {\n    await this.setState({\n      accounts: accounts\n    });\n    console.log(this.state.accounts);\n  }\n\n  async setSdk(currentSdk) {\n    await this.setState({\n      sdk: currentSdk\n    });\n    console.log(this.state.sdk);\n  }\n\n  async handleInit() {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum && ethereum.isMetaMask) {\n      console.log('Ethereum successfully detected!');\n      this.setProvider(ethereum); // add listener on accountsChanged event to render actual address\n      // ethereum.on('accountsChanged', this.state.accounts)\n\n      ethereum.on('accountsChanged', this.setAccounts); // \t// // configure web3\n\n      const web3 = new Web3(ethereum);\n      await this.setWeb3Obj(web3); // // set current account if already connected\n\n      web3.eth.getAccounts().then(e => {\n        this.setAccounts(e);\n        console.log(e);\n      });\n    } else {\n      console.log('Please install MetaMask!');\n    }\n  }\n\n  render() {\n    if (!this.state.provider.isMetaMask) {\n      return /*#__PURE__*/_jsxDEV(ShowError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          provider: this.state.provider,\n          accounts: this.state.accounts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            provider: this.state.provider,\n            accounts: this.state.accounts,\n            web3: this.state.web3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/work/Desktop/Code/BoredPhase2/src/App.js"],"names":["React","Home","Header","ShowError","Web3","App","Component","constructor","props","setAccounts","bind","state","provider","accounts","sdk","web3","componentWillMount","console","log","useEffect","setWeb3Obj","setState","window","ethereum","handleInit","addEventListener","once","setTimeout","setProvider","currentProvider","setSdk","currentSdk","isMetaMask","on","eth","getAccounts","then","e","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Header from \"./pages/header\";\r\nimport ShowError from \"./components/Info/error\";\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// import Home from './pages/home'\r\n// import Item from './pages/item'\r\n// import Header  from './pages/header';\r\n// import ModelInformation from './pages/model-information';\r\n// import Collection from './pages/collection';\r\nimport Web3 from \"web3\"\r\n// import { createRaribleSdk, RaribleSdk } from \"@rarible/protocol-ethereum-sdk\"\r\n// import React from 'react'\r\n// import { Web3Ethereum } from \"@rarible/web3-ethereum\";\r\n// import { Switch, Route } from 'react-router-dom'\r\n// import ModelCollection from './pages/model';\r\n// import CollectionSale from './pages/collection-sale';\r\n// import ItemCollection from './pages/item-collection';\r\n// import ItemCollectionCreated from './pages/item-collection-created';\r\n// import FileUpload from './pages/file-upload';\r\n// import ShowError from './pages/error';\r\n\r\n\r\n\r\n\r\nimport \"./App.scss\";\r\n// const App = () => {\r\n//   return (\r\n//    <div>\r\n//       <Header></Header>\r\n//     <div className=\"App\">\r\n      \r\n//       <Home />\r\n//     </div>\r\n//    </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.setAccounts = this.setAccounts.bind(this)\r\n    this.state = {\r\n\r\n      provider : null,\r\n      accounts : [],\r\n      sdk:null,\r\n      web3:null,\r\n\r\n    }\r\n  }\r\n\r\n    componentWillMount() {\r\n\r\n      // this.setState({ message: \"This is an updated message\" });\r\n      console.log(\"Component is Mounting\")\r\n      this.useEffect()\r\n  \r\n  }\r\n\r\n  async setWeb3Obj(web3){\r\n    await this.setState({ web3});\r\n  }\r\n\r\n    useEffect(){\r\n\r\n      if (window.ethereum) {\r\n        this.handleInit()\r\n        // console.log(\"going in if\")\r\n      } else {\r\n        window.addEventListener('ethereum#initialized', this.handleInit, {\r\n          once: true,\r\n        })\r\n        setTimeout(this.handleInit, 3000) // 3 seconds\r\n      }\r\n  \r\n    }\r\n\r\n    async setProvider(currentProvider){\r\n      await this.setState({ provider: currentProvider });\r\n      console.log(this.state.provider);\r\n    }\r\n  \r\n  \r\n    async setAccounts(accounts){\r\n      await this.setState({ accounts: accounts });\r\n      console.log(this.state.accounts);\r\n    }\r\n\r\n      async setSdk(currentSdk){\r\n      await this.setState({ sdk : currentSdk })\r\n      console.log(this.state.sdk);\r\n  }\r\n\r\n    async handleInit(){\r\n    const { ethereum } = window\r\n\t\tif (ethereum && ethereum.isMetaMask) {\r\n\t\t\tconsole.log('Ethereum successfully detected!')\r\n\t\t\tthis.setProvider(ethereum)\r\n\r\n\t\t\t// add listener on accountsChanged event to render actual address\r\n\t\t\t// ethereum.on('accountsChanged', this.state.accounts)\r\n      ethereum.on('accountsChanged', this.setAccounts);\r\n    \r\n\t\t// \t// // configure web3\r\n\t\t\tconst web3 = new Web3(ethereum)\r\n      await this.setWeb3Obj(web3)\r\n\r\n\t\t\t// // set current account if already connected\r\n\t\t\tweb3.eth.getAccounts().then(e => {\r\n\t\t\t\tthis.setAccounts(e)\r\n        console.log(e)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconsole.log('Please install MetaMask!')\r\n\t\t}\r\n  }\r\n    render() {\r\n        if(!this.state.provider.isMetaMask){\r\n          return(<ShowError />)\r\n        }\r\n       else{\r\n        return (\r\n          <div>\r\n          <Header provider={this.state.provider} accounts={this.state.accounts} />\r\n        <div className=\"App\">\r\n          \r\n          <Home provider={this.state.provider} accounts={this.state.accounts} web3={this.state.web3} />\r\n        </div>\r\n       </div>\r\n        )\r\n       }\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}